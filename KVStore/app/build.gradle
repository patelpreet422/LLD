/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // gradle jacoco plugin
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // SLF4J and Logback dependencies
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'ch.qos.logback:logback-classic:1.5.6'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testImplementation 'org.mockito:mockito-core:5.12.0'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'kvstore.App'
}

var ENABLE_PREVIEW = "--enable-preview"

tasks.withType(JavaCompile.class).configureEach {
    options.compilerArgs.add(ENABLE_PREVIEW)
}

tasks.test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    jvmArgs(ENABLE_PREVIEW)
    finalizedBy jacocoTestReport // report is always generated after tests run
}


jacocoTestReport {

    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = false
        csv.required = false
    }

}

jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('reports/jacocoReportDir')
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}